#!/bin/bash
#
# This file is managed by Chef.
# Do NOT modify this file directly.
#
# chkconfig: 345 20 80
# description: <%=node.cassandra.service_name%> daemon
# processname: <%=node.cassandra.service_name%>

export CASSANDRA_HOME=<%=node.cassandra.installation_dir%>
export CASSANDRA_CONF=<%=node.cassandra.conf_dir%>
NODETOOL=$CASSANDRA_HOME/bin/nodetool

SERVICE_USER=<%=node.cassandra.user%>
SERVICE_GROUP=<%=node.cassandra.group%>

PROGRAM=<%=node.cassandra.service_name%>
SERVICE_PID_FILE=<%=node.cassandra.pid_dir%>/$PROGRAM.pid

SERVICE_EXEC=$CASSANDRA_HOME/bin/cassandra

SERVICE_LOG_FILE=<%=node.cassandra.log_dir%>/boot.log
SERVICE_LOCK=/var/lock/subsys/$PROGRAM

WAIT_FOR_START=10

# Instead set ulimit for the user
# FD_LIMIT=100000
# ulimit -l unlimited
# ulimit -n "$FD_LIMIT"

[ -e $SERVICE_EXEC ] || {
  echo "$PROGRAM missing $SERVICE_EXEC  [failed]"
  exit 1
}

[ -e $CASSANDRA_HOME/lib/apache-cassandra-<%=node.cassandra.version%>.jar ] || {
  echo "$PROGRAM missing $CASSANDRA_HOME/lib/apache-cassandra-<%=node.cassandra.version%>.jar  [failed]"
  exit 1
}

[ -e $CASSANDRA_CONF/cassandra.yaml ] || {
  echo "$PROGRAM missing $CASSANDRA_CONF/cassandra.yaml  [failed]"
  exit 1
}

[ -e $CASSANDRA_CONF/cassandra-env.sh ] || {
  echo "$PROGRAM missing $CASSANDRA_CONF/cassandra-env.sh  [failed]"
  exit 0
}

. /etc/init.d/functions

RETVAL=0

# Common
service_start_pre_check() {
  if [ -s $SERVICE_PID_FILE ]; then
    process_pid=$(cat $SERVICE_PID_FILE)
    ps -p $process_pid > /dev/null
    if [ $? == 0 ]; then
      echo -n "$PROGRAM is already running (pid $process_pid) .."
      echo
      exit 0
    else
      echo -n "$PROGRAM is dead and pid file exists ($SERVICE_PID_FILE) .."
      echo
      exit 1
    fi
  fi
}

service_stop_pre_check() {
  if [ ! -f $SERVICE_PID_FILE ]; then
    echo "$PROGRAM is already stopped "
    # echo_success
    exit 0
  else
    process_pid=$(cat $SERVICE_PID_FILE)
    ps -p $process_pid > /dev/null
    if [ $? != 0 ]; then
      rm -fr $SERVICE_PID_FILE
      echo "$PROGRAM is dead and pid file exists ($SERVICE_PID_FILE). pid file removed "
      # echo_success
      exit 0
    fi
  fi
  echo
}

service_start() {
    service_start_pre_check
    echo -n "Starting $PROGRAM .."
    daemon --user $SERVICE_USER $SERVICE_EXEC -p $SERVICE_PID_FILE >> $SERVICE_LOG_FILE 2>&1
    RETVAL=$?
    if [ $RETVAL = 0 ]; then
      echo_success
    else
      echo_failure
    fi
    echo
    return $RETVAL
}

service_stop() {
  service_stop_pre_check

  echo "executing nodetool disablethrift .."
  $NODETOOL -h <%=node['ipaddress']%> disablethrift
  [ $? -eq 0 ] || {
    echo "failed to execute disablethrift .."
  }
  sleep 3

  echo "executing nodetool disablegossip .."
  $NODETOOL -h <%=node['ipaddress']%> disablegossip
  [ $? -eq 0 ] || {
    echo "failed to execute disablegossip .."
  }
  sleep 3

  echo "executing nodetool drain .."
  $NODETOOL -h <%=node['ipaddress']%> drain
  [ $? -eq 0 ] || {
    echo "failed to execute drain .."
  }
  sleep 3

  echo -n "Shutting down $PROGRAM .. "
  killproc -p $SERVICE_PID_FILE $PROGRAM
  RETVAL=$?
  echo

}

service_status() {
    status -p $SERVICE_PID_FILE $PROGRAM
    RETVAL=$?
}

case "$1" in
  start)
    service_start
  ;;
  stop)
    service_stop
  ;;
  status)
    service_status
  ;;
  restart)
    service_stop
    sleep 5
    service_start
  ;;
  *)
    echo "Usage: $0 {start|stop|status|restart}"
    RETVAL=1
esac

exit $RETVAL
